{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0","program":"/Users/jkj/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indenter","--edition=2018","/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=76b4632314d38566","-C","extra-filename=-76b4632314d38566","--out-dir","/Users/jkj/jkcode/advent_of_code_2020/target/rls/debug/deps","-L","dependency=/Users/jkj/jkcode/advent_of_code_2020/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/jkj/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/jkj/jkcode/advent_of_code_2020/target/rls/debug/deps/libindenter-76b4632314d38566.rmeta"},"prelude":{"crate_id":{"name":"indenter","disambiguator":[5056098504977000760,8472807424383523031]},"crate_root":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src","external_crates":[{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16391569226461738429,2396501197197794813]}},{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15218473559130501536,10412498800867537882]}},{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15002797972794468225,1552711559034990603]}}],"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":0,"byte_end":7168,"line_start":1,"line_end":262,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":0,"byte_end":7168,"line_start":1,"line_end":262,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":13},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":27},{"krate":0,"index":30}],"decl_id":null,"docs":" A wrapper for the `fmt::Write` objects that efficiently appends indentation after every newline","sig":null,"attributes":[{"value":"/ A wrapper for the `fmt::Write` objects that efficiently appends indentation after every newline","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":0,"byte_end":99,"line_start":1,"line_end":1,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":100,"byte_end":103,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Setup","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":104,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":116,"byte_end":119,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":120,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":155,"byte_end":158,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":159,"byte_end":170,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":171,"byte_end":189,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/ indenter = \"0.2\"","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":190,"byte_end":210,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":211,"byte_end":218,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":219,"byte_end":222,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":223,"byte_end":236,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":237,"byte_end":240,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":241,"byte_end":252,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":253,"byte_end":279,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use core::fmt::{self, Write};","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":280,"byte_end":313,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/ use indenter::indented;","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":314,"byte_end":341,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":342,"byte_end":345,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ struct ErrorReporter<'a>(&'a dyn Error);","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":346,"byte_end":390,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":391,"byte_end":394,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl fmt::Debug for ErrorReporter<'_> {","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":395,"byte_end":438,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":439,"byte_end":505,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/         let mut source = Some(self.0);","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":506,"byte_end":548,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/         let mut i = 0;","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":549,"byte_end":575,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":576,"byte_end":579,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/         while let Some(error) = source {","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":580,"byte_end":624,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/             writeln!(f)?;","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":625,"byte_end":654,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/             write!(indented(f).ind(i), \"{}\", error)?;","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":655,"byte_end":712,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":713,"byte_end":716,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/             source = error.source();","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":717,"byte_end":757,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/             i += 1;","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":758,"byte_end":781,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":782,"byte_end":795,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":796,"byte_end":799,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/         Ok(())","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":800,"byte_end":818,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":819,"byte_end":828,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":829,"byte_end":834,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":835,"byte_end":842,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":843,"byte_end":853,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"warn(missing_debug_implementations, missing_docs, missing_doc_code_examples,\n       rust_2018_idioms, unreachable_pub, bad_style, const_err, dead_code,\n       improper_ctypes, non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":912,"byte_end":1405,"line_start":40,"line_end":62,"column_start":1,"column_end":3}}]},{"kind":"StructVariant","id":{"krate":0,"index":7},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1684,"byte_end":1691,"line_start":71,"line_end":71,"column_start":5,"column_end":12},"name":"Uniform","qualname":"::Format::Uniform","value":"Format::Uniform { indentation }","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Insert uniform indentation before every line","sig":null,"attributes":[{"value":"/ Insert uniform indentation before every line","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1537,"byte_end":1585,"line_start":68,"line_end":68,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1590,"byte_end":1593,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This format takes a static string as input and inserts it after every newline","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1598,"byte_end":1679,"line_start":70,"line_end":70,"column_start":5,"column_end":86}}]},{"kind":"StructVariant","id":{"krate":0,"index":9},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1963,"byte_end":1971,"line_start":79,"line_end":79,"column_start":5,"column_end":13},"name":"Numbered","qualname":"::Format::Numbered","value":"Format::Numbered { ind }","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Inserts a number before the first line","sig":null,"attributes":[{"value":"/ Inserts a number before the first line","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1788,"byte_end":1830,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1835,"byte_end":1838,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This format hard codes the indentation level to match the indentation from","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1843,"byte_end":1921,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ `core::backtrace::Backtrace`","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1926,"byte_end":1958,"line_start":78,"line_end":78,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":11},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2241,"byte_end":2247,"line_start":86,"line_end":86,"column_start":5,"column_end":11},"name":"Custom","qualname":"::Format::Custom","value":"Format::Custom { inserter }","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" A custom indenter which is executed after every newline","sig":null,"attributes":[{"value":"/ A custom indenter which is executed after every newline","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2069,"byte_end":2128,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2133,"byte_end":2136,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Custom indenters are passed the current line number and the buffer to be written to as args","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2141,"byte_end":2236,"line_start":85,"line_end":85,"column_start":5,"column_end":100}}]},{"kind":"Enum","id":{"krate":0,"index":5},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1520,"byte_end":1526,"line_start":67,"line_end":67,"column_start":10,"column_end":16},"name":"Format","qualname":"::Format","value":"pub enum Format<'a> {\n\n    /// Insert uniform indentation before every line\n    ///\n    /// This format takes a static string as input and inserts it after every newline\n    Uniform {\n        /// The string to insert as indentation\n        indentation: &'static str,\n    },\n\n    /// Inserts a number before the first line\n    ///\n    /// This format hard codes the indentation level to match the indentation from\n    /// `core::backtrace::Backtrace`\n    Numbered {\n        /// The index to insert before the first line of output\n        ind: usize,\n    },\n\n    /// A custom indenter which is executed after every newline\n    ///\n    /// Custom indenters are passed the current line number and the buffer to be written to as args\n    Custom {\n        /// The custom indenter\n        inserter: &'a mut Inserter,\n    },\n}","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":11}],"decl_id":null,"docs":" The set of supported formats for indentation\n","sig":null,"attributes":[{"value":"/ The set of supported formats for indentation","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1422,"byte_end":1470,"line_start":65,"line_end":65,"column_start":1,"column_end":49}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":1471,"byte_end":1510,"line_start":66,"line_end":66,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":13},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2932,"byte_end":2940,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"Indented","qualname":"::Indented","value":"Indented {  }","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" Helper struct for efficiently indenting multi line display implementations","sig":null,"attributes":[{"value":"/ Helper struct for efficiently indenting multi line display implementations","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2328,"byte_end":2406,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2407,"byte_end":2410,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Explanation","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2411,"byte_end":2428,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2429,"byte_end":2432,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This type will never allocate a string to handle inserting indentation. It instead leverages","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2433,"byte_end":2529,"line_start":96,"line_end":96,"column_start":1,"column_end":97}},{"value":"/ the `write_str` function that serves as the foundation of the `core::fmt::Write` trait. This","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2530,"byte_end":2626,"line_start":97,"line_end":97,"column_start":1,"column_end":97}},{"value":"/ lets it intercept each piece of output as its being written to the output buffer. It then","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2627,"byte_end":2720,"line_start":98,"line_end":98,"column_start":1,"column_end":94}},{"value":"/ splits on newlines giving slices into the original string. Finally we alternate writing these","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2721,"byte_end":2818,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ lines and the specified indentation to the output buffer.","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2819,"byte_end":2880,"line_start":100,"line_end":100,"column_start":1,"column_end":62}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":2881,"byte_end":2920,"line_start":101,"line_end":101,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":19},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3187,"byte_end":3195,"line_start":111,"line_end":111,"column_start":10,"column_end":18},"name":"Inserter","qualname":"::Inserter","value":"FnMut(usize, &mut fmt::Write) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" A callback for `Format::Custom` used to insert indenation after a new line","sig":null,"attributes":[{"value":"/ A callback for `Format::Custom` used to insert indenation after a new line","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3018,"byte_end":3096,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3097,"byte_end":3100,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The first argument is the line number within the output, starting from 0","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3101,"byte_end":3177,"line_start":110,"line_end":110,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3869,"byte_end":3872,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"ind","qualname":"<Indented>::ind","value":"pub fn ind(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the format to `Format::Numbered` with the provided index\n","sig":null,"attributes":[{"value":"/ Sets the format to `Format::Numbered` with the provided index","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3792,"byte_end":3857,"line_start":130,"line_end":130,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":4027,"byte_end":4038,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Indented>::with_format","value":"pub fn with_format(Self, Format) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an indenter with a user defined format\n","sig":null,"attributes":[{"value":"/ Construct an indenter with a user defined format","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3963,"byte_end":4015,"line_start":135,"line_end":135,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":5048,"byte_end":5056,"line_start":171,"line_end":171,"column_start":8,"column_end":16},"name":"indented","qualname":"::indented","value":"pub fn indented<D>(&mut D) -> Indented<, D>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for creating a default indenter\n","sig":null,"attributes":[{"value":"/ Helper function for creating a default indenter","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":4989,"byte_end":5040,"line_start":170,"line_end":170,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3258,"byte_end":3264,"line_start":113,"line_end":113,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3770,"byte_end":3778,"line_start":129,"line_end":129,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":4154,"byte_end":4162,"line_start":142,"line_end":142,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3258,"byte_end":3264,"line_start":113,"line_end":113,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":5},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":3770,"byte_end":3778,"line_start":129,"line_end":129,"column_start":13,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jkj/.cargo/registry/src/github.com-1ecc6299db9ec823/indenter-0.3.0/src/lib.rs","byte_start":4154,"byte_end":4162,"line_start":142,"line_end":142,"column_start":24,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":6571}}]}